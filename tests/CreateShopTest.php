<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateShop extends TestCase
{
    public function testCreateShop0()
    {
        $client = $this->newClient();
        $request = new Request\CreateShop(
            "5p"
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShop1()
    {
        $client = $this->newClient();
        $request = new Request\CreateShop(
            "5p",
            [
                'organization_code' => "Z-w-4KM0D8-v"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShop2()
    {
        $client = $this->newClient();
        $request = new Request\CreateShop(
            "5p",
            [
                'shop_external_id' => "qLYW374oN0",
                'organization_code' => "Z1--th-2Jl"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShop3()
    {
        $client = $this->newClient();
        $request = new Request\CreateShop(
            "5p",
            [
                'shop_email' => "AW6pUVfnuE@1dPJ.com",
                'shop_external_id' => "WPsbQLu6IkCj7YtpttaXQ4r01Al",
                'organization_code' => "-"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShop4()
    {
        $client = $this->newClient();
        $request = new Request\CreateShop(
            "5p",
            [
                'shop_tel' => "0904-958-9820",
                'shop_email' => "mSulyUJU5W@R5Co.com",
                'shop_external_id' => "ewucGFITuVYqC7jhyktFS9nr5NYC2sY",
                'organization_code' => "qpko--3--0--SE"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShop5()
    {
        $client = $this->newClient();
        $request = new Request\CreateShop(
            "5p",
            [
                'shop_address' => "kiVpdbRdYxMrYm04IhLY63y0wUJvst1Iodp4jvaZDO1q09gvikJ8nxBz5YvGAg",
                'shop_tel' => "0441-11919619",
                'shop_email' => "pdoFk4JQla@0RqD.com",
                'shop_external_id' => "2v8a",
                'organization_code' => "-qJw2"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateShop6()
    {
        $client = $this->newClient();
        $request = new Request\CreateShop(
            "5p",
            [
                'shop_postal_code' => "142-3508",
                'shop_address' => "KvPhxKBTNtux8AJzlgY6uDsggbR4v2bHwgBNHND1RQz5Qhcwi9tYXOqvsDUT",
                'shop_tel' => "0045-9200518",
                'shop_email' => "j5e70XLLjx@eAN2.com",
                'shop_external_id' => "lW",
                'organization_code' => "28g--nc7---RU----"
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
