<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class CreateOrganization extends TestCase
{
    public function testCreateOrganization0()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization("Xudq6izJs44IbprYPPTE4r", "VrxbSZw92hplqknqQVtiouspQ89yLluQmN0UQlwU6WBtM", ["c373c86e-b795-4f63-b55e-5d85dd6576a5", "1bda0c5e-1bbe-415d-a4ba-14d5cc73fe08", "3320a44d-2a0c-4f73-aa10-b52d090af86f", "9b17351d-c400-4022-91f9-cc4fd79cc3a8", "c67b5e0b-5142-4646-bb63-ae399f2b7cda", "5e8bbf0d-6627-400e-bbbb-c671ce9b4431", "7c1a9bda-ce4c-4970-90d8-6ec1fd5c5832"], "ZD3PvpXs7l@FAmA.com", "7AM8LAdI8i@UY34.com");
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization1()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization("Xudq6izJs44IbprYPPTE4r", "VrxbSZw92hplqknqQVtiouspQ89yLluQmN0UQlwU6WBtM", ["c373c86e-b795-4f63-b55e-5d85dd6576a5", "1bda0c5e-1bbe-415d-a4ba-14d5cc73fe08", "3320a44d-2a0c-4f73-aa10-b52d090af86f", "9b17351d-c400-4022-91f9-cc4fd79cc3a8", "c67b5e0b-5142-4646-bb63-ae399f2b7cda", "5e8bbf0d-6627-400e-bbbb-c671ce9b4431", "7c1a9bda-ce4c-4970-90d8-6ec1fd5c5832"], "ZD3PvpXs7l@FAmA.com", "7AM8LAdI8i@UY34.com", ['contact_name' => "GXDeOE6xlXxMtBNprrGb40rTVz5JCYOGmGk03PZI"]);
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization2()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization("Xudq6izJs44IbprYPPTE4r", "VrxbSZw92hplqknqQVtiouspQ89yLluQmN0UQlwU6WBtM", ["c373c86e-b795-4f63-b55e-5d85dd6576a5", "1bda0c5e-1bbe-415d-a4ba-14d5cc73fe08", "3320a44d-2a0c-4f73-aa10-b52d090af86f", "9b17351d-c400-4022-91f9-cc4fd79cc3a8", "c67b5e0b-5142-4646-bb63-ae399f2b7cda", "5e8bbf0d-6627-400e-bbbb-c671ce9b4431", "7c1a9bda-ce4c-4970-90d8-6ec1fd5c5832"], "ZD3PvpXs7l@FAmA.com", "7AM8LAdI8i@UY34.com", ['bank_account_holder_name' => "ï½¦", 'contact_name' => "bkgOV99x73Ry4u1sZQ5eFg9X7ZQ3KC3T8NGmDytYltOeGEwzdDc1UWC5eTbz7LFiaVHV8KlTeK4EMHE3VPj8qQKCLAzTD7klbbBoipsy6SfBTs4z5QqkLt17nYqJVDOCDP7AsRWgkzaOKIrq6FJmn3NjUQXY7o7T4wSRnwYLKbYBl"]);
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization3()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization("Xudq6izJs44IbprYPPTE4r", "VrxbSZw92hplqknqQVtiouspQ89yLluQmN0UQlwU6WBtM", ["c373c86e-b795-4f63-b55e-5d85dd6576a5", "1bda0c5e-1bbe-415d-a4ba-14d5cc73fe08", "3320a44d-2a0c-4f73-aa10-b52d090af86f", "9b17351d-c400-4022-91f9-cc4fd79cc3a8", "c67b5e0b-5142-4646-bb63-ae399f2b7cda", "5e8bbf0d-6627-400e-bbbb-c671ce9b4431", "7c1a9bda-ce4c-4970-90d8-6ec1fd5c5832"], "ZD3PvpXs7l@FAmA.com", "7AM8LAdI8i@UY34.com", ['bank_account' => "32", 'bank_account_holder_name' => "4", 'contact_name' => "v5xYahOR0efwzZIxox0g3TlwWmFRzt0vmRDLd2Cg53TcvtdhIFeae2dyxnOfP7DHMYZeyOrpVng8UXyHeYiU6NocQYnNMdCuOO7gKj0hPpzXTkomc7HUMMb2Crnnfwl"]);
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization4()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization("Xudq6izJs44IbprYPPTE4r", "VrxbSZw92hplqknqQVtiouspQ89yLluQmN0UQlwU6WBtM", ["c373c86e-b795-4f63-b55e-5d85dd6576a5", "1bda0c5e-1bbe-415d-a4ba-14d5cc73fe08", "3320a44d-2a0c-4f73-aa10-b52d090af86f", "9b17351d-c400-4022-91f9-cc4fd79cc3a8", "c67b5e0b-5142-4646-bb63-ae399f2b7cda", "5e8bbf0d-6627-400e-bbbb-c671ce9b4431", "7c1a9bda-ce4c-4970-90d8-6ec1fd5c5832"], "ZD3PvpXs7l@FAmA.com", "7AM8LAdI8i@UY34.com", ['bank_account_type' => "current", 'bank_account' => "591", 'bank_account_holder_name' => "/", 'contact_name' => "EYhY5BEslKbZwKgKBdfxwMsNrkldv"]);
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization5()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization("Xudq6izJs44IbprYPPTE4r", "VrxbSZw92hplqknqQVtiouspQ89yLluQmN0UQlwU6WBtM", ["c373c86e-b795-4f63-b55e-5d85dd6576a5", "1bda0c5e-1bbe-415d-a4ba-14d5cc73fe08", "3320a44d-2a0c-4f73-aa10-b52d090af86f", "9b17351d-c400-4022-91f9-cc4fd79cc3a8", "c67b5e0b-5142-4646-bb63-ae399f2b7cda", "5e8bbf0d-6627-400e-bbbb-c671ce9b4431", "7c1a9bda-ce4c-4970-90d8-6ec1fd5c5832"], "ZD3PvpXs7l@FAmA.com", "7AM8LAdI8i@UY34.com", ['bank_branch_code' => "117", 'bank_account_type' => "current", 'bank_account' => "5", 'bank_account_holder_name' => "\\", 'contact_name' => "IVsO4pRHe2kSLsliiCS2qjzM5PDHBenaOZF0nAdwmGfhq7braoIkKKxqhDvklNOdrBtWkPzyK9IOOOu7OwOcLojS9ZxjUyvnjQ7Lsz1XiWim92o2Gp46bapTyruDMiKZni7BgMVSfy5MkzTmtpmeyVrOtbm2ll1RjxXt8FrrLcAIFNbsSfugW3tsele44RKfgEaMhkWG2Er5K"]);
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization6()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization("Xudq6izJs44IbprYPPTE4r", "VrxbSZw92hplqknqQVtiouspQ89yLluQmN0UQlwU6WBtM", ["c373c86e-b795-4f63-b55e-5d85dd6576a5", "1bda0c5e-1bbe-415d-a4ba-14d5cc73fe08", "3320a44d-2a0c-4f73-aa10-b52d090af86f", "9b17351d-c400-4022-91f9-cc4fd79cc3a8", "c67b5e0b-5142-4646-bb63-ae399f2b7cda", "5e8bbf0d-6627-400e-bbbb-c671ce9b4431", "7c1a9bda-ce4c-4970-90d8-6ec1fd5c5832"], "ZD3PvpXs7l@FAmA.com", "7AM8LAdI8i@UY34.com", ['bank_branch_name' => "0wKZV86Thbpnk84fBPYzLY1l", 'bank_branch_code' => "", 'bank_account_type' => "current", 'bank_account' => "96234", 'bank_account_holder_name' => "8", 'contact_name' => "aIe1KpGol3ELQOexa9nyDHRWIiLAtUeRL4cFoo8dgT"]);
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization7()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization("Xudq6izJs44IbprYPPTE4r", "VrxbSZw92hplqknqQVtiouspQ89yLluQmN0UQlwU6WBtM", ["c373c86e-b795-4f63-b55e-5d85dd6576a5", "1bda0c5e-1bbe-415d-a4ba-14d5cc73fe08", "3320a44d-2a0c-4f73-aa10-b52d090af86f", "9b17351d-c400-4022-91f9-cc4fd79cc3a8", "c67b5e0b-5142-4646-bb63-ae399f2b7cda", "5e8bbf0d-6627-400e-bbbb-c671ce9b4431", "7c1a9bda-ce4c-4970-90d8-6ec1fd5c5832"], "ZD3PvpXs7l@FAmA.com", "7AM8LAdI8i@UY34.com", ['bank_code' => "", 'bank_branch_name' => "Erawg8pObD87nlGx1o0zouehaQWTarEfM1ac4PdMO3c", 'bank_branch_code' => "834", 'bank_account_type' => "saving", 'bank_account' => "6", 'bank_account_holder_name' => "\\", 'contact_name' => "0Oveh5BbAuoTTnjnI8ATXmpUssJmb7uFqUWxEfrcE1NW1Z9tbD4eI3dVLksDSLAqZaPcrWz2oPMuXzPr91hsUljSLgLx1SyKfcnjDzp4Vn"]);
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testCreateOrganization8()
    {
        $client = $this->newClient();
        $request = new Request\CreateOrganization("Xudq6izJs44IbprYPPTE4r", "VrxbSZw92hplqknqQVtiouspQ89yLluQmN0UQlwU6WBtM", ["c373c86e-b795-4f63-b55e-5d85dd6576a5", "1bda0c5e-1bbe-415d-a4ba-14d5cc73fe08", "3320a44d-2a0c-4f73-aa10-b52d090af86f", "9b17351d-c400-4022-91f9-cc4fd79cc3a8", "c67b5e0b-5142-4646-bb63-ae399f2b7cda", "5e8bbf0d-6627-400e-bbbb-c671ce9b4431", "7c1a9bda-ce4c-4970-90d8-6ec1fd5c5832"], "ZD3PvpXs7l@FAmA.com", "7AM8LAdI8i@UY34.com", ['bank_name' => "1O7zIk0kFYYLVDJFITq6TfXP0TyqqIyqc7ccoblOZB", 'bank_code' => "2696", 'bank_branch_name' => "bpL0IQoqXyFm3", 'bank_branch_code' => "912", 'bank_account_type' => "other", 'bank_account' => "7", 'bank_account_holder_name' => " ", 'contact_name' => "9sOtkrxHO0ZHtpf"]);
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
