<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class ListShops extends TestCase
{
    public function testListShops0()
    {
        $client = $this->newClient();
        $request = new Request\ListShops();
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops1()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'per_page' => 7068
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops2()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'page' => 1483,
                'per_page' => 1744
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops3()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'private_money_id' => "1d21542d-b288-4810-846f-27427e0ef468",
                'page' => 6854,
                'per_page' => 2302
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testListShops4()
    {
        $client = $this->newClient();
        $request = new Request\ListShops(
            [
                'organization_code' => "V7ovY",
                'private_money_id' => "b0330ba6-8ac1-4d57-9979-9d05a0b9b2b2",
                'page' => 5260,
                'per_page' => 4684
            ]
        );
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
