<?php
// DO NOT EDIT: File is generated by code generator.
namespace Pokepay;

class GetPrivateMoneyOrganizationSummaries extends TestCase
{
    public function testGetPrivateMoneyOrganizationSummaries0()
    {
        $client = $this->newClient();
        $request = new Request\GetPrivateMoneyOrganizationSummaries("3bb1f083-a6f8-4e4f-a31b-4b99987542dc");
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetPrivateMoneyOrganizationSummaries1()
    {
        $client = $this->newClient();
        $request = new Request\GetPrivateMoneyOrganizationSummaries("3bb1f083-a6f8-4e4f-a31b-4b99987542dc", ['page' => 2153, 'per_page' => 3952, 'page' => 8802]);
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetPrivateMoneyOrganizationSummaries2()
    {
        $client = $this->newClient();
        $request = new Request\GetPrivateMoneyOrganizationSummaries("3bb1f083-a6f8-4e4f-a31b-4b99987542dc", ['page' => 5241, 'per_page' => 5647, 'page' => 8080, 'from' => "2024-08-01T18:23:37.000000+09:00", 'to' => "2016-05-03T00:36:14.000000+09:00"]);
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
    public function testGetPrivateMoneyOrganizationSummaries3()
    {
        $client = $this->newClient();
        $request = new Request\GetPrivateMoneyOrganizationSummaries("3bb1f083-a6f8-4e4f-a31b-4b99987542dc", ['from' => "2016-05-02T22:57:54.000000+09:00", 'to' => "2024-12-10T17:20:44.000000+09:00"]);
        try {
            $response = $client->send($request);
            $this->assertTrue(true);
        } catch (Error\HttpRequest $e) {
            $this->assertNotSame(400, $e->code);
        } catch (Error\ApiConnection $e) {
            $this->assertTrue(false);
        }
    }
}
